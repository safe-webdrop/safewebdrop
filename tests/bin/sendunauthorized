#!/usr/bin/bash

##############################################################################
# This file is part of the CRYPTO BONE
# File     : sendunauthorized  (client)
# Version  : 2.0 (ALL-IN-ONE)
# License  : BSD-3-Clause
# Date     : 20 Apr 2025
# Contact  : Please send enquiries and bug-reports to innovation@senderek.ie
#
# Copyright (c) 2015-2025
#	Ralf Senderek, Ireland.  All rights reserved. (https://senderek.ie)
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	   This product includes software developed by Ralf Senderek.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND  ANY EXPRESS OR 
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  IMPLIED WARRANTIES 
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
##############################################################################

# Parameter
# $1 is ID name
# $2 is RECIPIENT
# $3 is RECIPIENT's SERVER name
# $4 overwrites DEBUG

#----------------------------------------------------#
# load functions and global variables
. ./test-functions

if [[ -r ../safewebdrop.config ]] ; then
   . ../safewebdrop.config
fi

# let parameters overwrite ID and HOST
if (( $# >= 3 )) ; then
    ID="$1"
    RECIPIENT="$2"
    HOST="$3"
    if (( $# == 4 )) ; then
         DEBUG="$4"
    fi
fi
if [[ ${DEBUG} = "yes" ]] ; then
    set -vx; exec 2>$0.trc
    /usr/bin/echo "debugging is ON ..."
fi

/usr/bin/echo "***** safewebdrop *****"
/usr/bin/echo "Send an unauthorized testmessage from user ${ID} to ${RECIPIENT} at ${HOST}"
/usr/bin/echo "The message is sent without a signature!"
/usr/bin/echo "Expected result : 0 bytes received."
/usr/bin/echo "***** ----------- *****"
/usr/bin/echo
/usr/bin/echo "Debug = ${DEBUG}"
/usr/bin/echo -n "continue? "
read REPLY
if [[ "${REPLY}x" != "yesx" ]] ; then
    /usr/bin/echo "exiting, yes continues here"
    /usr/bin/echo "usage: ./sendunauthorized ID RECIPIENT HOST [[yes|no]] (overwrites config) "
    exit 1
fi    


# check directory for ${ID}
if [[ ! -d ../${ID} ]] ; then
    /usr/bin/mkdir ../${ID}
fi

SENDERID="${ID}"

# generate a new message
/usr/bin/echo -n "Please type your message (one line): "
read MESSAGE
/usr/bin/echo -n "${MESSAGE}" > ${MSG}
# encrypt the message with gpg
if [[ -x /usr/bin/gpg ]] ; then
     /usr/bin/rm -f ${MSG}.asc
     /usr/bin/gpg -ca --batch --passphrase ${SEC} ${MSG}
fi

# PHASE 1: 
# just send the message without signature

NEW="${RAM}/new"
/usr/bin/echo  "From: ${ID}%${HOST}" > ${NEW} 
/usr/bin/echo >> ${NEW}
/usr/bin/cat ${MSG}.asc >> ${NEW}
/usr/bin/echo "." >> ${NEW}
/usr/bin/echo   >> ${NEW}
base64 --wrap=0 ${NEW} > ${NEW}.b64
REQ=$(/usr/bin/cat ${NEW}.b64)

/usr/bin/echo "-----------"
/usr/bin/echo "encrypted message: "
cat ${MSG}.asc 
/usr/bin/echo
/usr/bin/echo "----end----"

RES=$(/usr/bin/curl https://${HOST}/cgi-bin/safewebdropsave?${RECIPIENT}\&${SENDERID}\&${REQ} 2>/dev/null)

/usr/bin/echo "SERVER -> I:  ${RES} :  ${#RES} bytes received.  "

exit 0
